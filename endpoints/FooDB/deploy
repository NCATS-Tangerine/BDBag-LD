#!/bin/bash

deactivate
set -e
set -x

# gather VM name
hostname; whoami

# method to prep the VM
venv () {
    venv=/projects/stars/var/FooDB/FooDBVenv

    if [ ! -d $venv ]; then
        python3.6 -m venv $venv
        source $venv/bin/activate
        pip install --upgrade pip
        pip install -r requirements.txt
    fi

    source $venv/bin/activate
}

# call for virtual python environment prep
venv

# move to the FooDB staging area for the repo
cd /projects/stars/var/FooDB/stage/smartBag/

# get the repo. sort of a chicken/egg thing here as the deploy file used here is in the repo
# note using a pull here implies you are using the correct repo branch
# alternativly, one could do a clone if master is up to date
git clone https://github.com/NCATS-Tangerine/smartBag.git
cd smartBag
#git pull

# export the current directory
export PATH=$PWD/bin:$PATH
echo $PATH

# go to the target project to process
cd endpoints/FooDB

# run the configuration script. this also creates the smartbag archive
./configure

# go to the smartBag API directory to create the site
cd ../../bin

# decompress the smart bag and load the API
./smartbag make smartapi --bag ../endpoints/FooDB/bag.tgz --opts ../endpoints/FooDB/options.json

# create the docker image and launch the container
# go to the directory with the docker file
cd ../endpoints/FooDB
docker build --tag=smartbag_foodb .

#docker login
#docker tag smartbag_foodb phillipsowen/smartbag_1:smartbag_foodb
#docker push phillipsowen/smartbag_1:smartbag_foodb

docker run -it -v /projects/stars/var/FooDB/stage/smartBag/bin:/smartBag -p 4001:5001 -d smartbag_foodb

# alternativly you can start the website on the command line
# start/run the API website
#./smartbag run smartapi --port 4001
